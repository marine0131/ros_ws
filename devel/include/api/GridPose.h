// Generated by gencpp from file api/GridPose.msg
// DO NOT EDIT!


#ifndef API_MESSAGE_GRIDPOSE_H
#define API_MESSAGE_GRIDPOSE_H

#include <ros/service_traits.h>


#include <api/GridPoseRequest.h>
#include <api/GridPoseResponse.h>


namespace api
{

struct GridPose
{

typedef GridPoseRequest Request;
typedef GridPoseResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GridPose
} // namespace api


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::api::GridPose > {
  static const char* value()
  {
    return "cb86799e520e4383cc93ac173628b1c6";
  }

  static const char* value(const ::api::GridPose&) { return value(); }
};

template<>
struct DataType< ::api::GridPose > {
  static const char* value()
  {
    return "api/GridPose";
  }

  static const char* value(const ::api::GridPose&) { return value(); }
};


// service_traits::MD5Sum< ::api::GridPoseRequest> should match 
// service_traits::MD5Sum< ::api::GridPose > 
template<>
struct MD5Sum< ::api::GridPoseRequest>
{
  static const char* value()
  {
    return MD5Sum< ::api::GridPose >::value();
  }
  static const char* value(const ::api::GridPoseRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::api::GridPoseRequest> should match 
// service_traits::DataType< ::api::GridPose > 
template<>
struct DataType< ::api::GridPoseRequest>
{
  static const char* value()
  {
    return DataType< ::api::GridPose >::value();
  }
  static const char* value(const ::api::GridPoseRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::api::GridPoseResponse> should match 
// service_traits::MD5Sum< ::api::GridPose > 
template<>
struct MD5Sum< ::api::GridPoseResponse>
{
  static const char* value()
  {
    return MD5Sum< ::api::GridPose >::value();
  }
  static const char* value(const ::api::GridPoseResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::api::GridPoseResponse> should match 
// service_traits::DataType< ::api::GridPose > 
template<>
struct DataType< ::api::GridPoseResponse>
{
  static const char* value()
  {
    return DataType< ::api::GridPose >::value();
  }
  static const char* value(const ::api::GridPoseResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // API_MESSAGE_GRIDPOSE_H
